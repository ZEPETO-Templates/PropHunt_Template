fileFormatVersion: 2
guid: f3eaf574edef5784dab3be7cb1fe1bda
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    UnityEngine_UI_1 = require(\"UnityEngine.UI\");\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    UIPlayerListTemplate_1 = require(\"../UI/UIPlayerListTemplate\");\r\nconst MultiplayerPropHuntManager_1
    = require(\"../Multiplayer/MultiplayerPropHuntManager\");\r\nconst WinnerScreen_1
    = require(\"../UI/WinnerScreen\");\r\nconst LobbyElementPool_1 = require(\"../UI/LobbyElementPool\");\r\nconst
    UnityEngine_2 = require(\"UnityEngine\");\r\nconst UITransformableButton_1 =
    require(\"../UI/UITransformableButton\");\r\n// This function is responsible
    for all the tasks that need to be displayed on the UI\r\nclass UIManager extends
    ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor() {\r\n        super(...arguments);\r\n       
    this.showingProps = false;\r\n        this.propsAmount = 0;\r\n        this.propsCounter
    = 0;\r\n        this.huntersCounter = 0;\r\n    }\r\n    Awake() {\r\n       
    // Singleton pattern\r\n        if (ZEPETO_Script_1.ZepetoScriptBehaviour.op_Inequality(UIManager.instance,
    null))\r\n            UnityEngine_1.GameObject.Destroy(this.gameObject);\r\n       
    else\r\n            UIManager.instance = this;\r\n        // Get the reference
    of the script of the lobby element\r\n        this._lobbyElementPool = this.lobbyElementPool.GetComponent($typeof(LobbyElementPool_1.default));\r\n       
    this.btnpropList.onClick.AddListener(() => {\r\n            this.showingProps
    = !this.showingProps;\r\n            if (this.showingCoroutine)\r\n               
    this.StopCoroutine(this.showingCoroutine);\r\n            this.showingCoroutine
    = this.StartCoroutine(this.ShowPropListCoroutine(this.showingProps));\r\n       
    });\r\n        // Update the texts of the counters in the lobby to be 0\r\n       
    this.txtHunterCounter.text = this.huntersCounter.toString();\r\n        this.txtPropCounter.text
    = this.propsCounter.toString();\r\n        // Get the reference of the rect transform
    of the proplist\r\n        this.rectPropList = this.propList.GetComponent($typeof(UnityEngine_2.RectTransform));\r\n       
    this.limitIn = this.rectPropList.position;\r\n        let _limitOut = this.rectPropList.position;\r\n       
    _limitOut.x = UnityEngine_1.Screen.width;\r\n        this.limitOut = _limitOut;\r\n   
    }\r\n    // This functions is called when one player is added to the game\r\n   
    OnZepetoAddPlayer(sessionId) {\r\n        // Get a reference of an element of
    the pool calling to the function of the script\r\n        let uiElement = this._lobbyElementPool.GetElement();\r\n       
    // populate the ui element with the data of the new player\r\n        uiElement.GetComponent($typeof(UIPlayerListTemplate_1.default)).Populate(sessionId,
    false, true);\r\n    }\r\n    // This functions is called when someone leaves
    the game\r\n    OnZepetoRemovePlayer(sessionId) {\r\n        // Call to the function
    of the lobby pool passing the player that leaves\r\n        this._lobbyElementPool.ReturnElementById(sessionId);\r\n   
    }\r\n    SetPropSelectedButton(btnScript) {\r\n        if (this.buttonSelected)\r\n           
    this.buttonSelected.selected.SetActive(false);\r\n        this.buttonSelected
    = btnScript;\r\n    }\r\n    ResetPropSelectedButton() {\r\n        if (this.buttonSelected)\r\n           
    this.buttonSelected.SetDefault();\r\n        this.buttonSelected = null;\r\n   
    }\r\n    // This function updates the lobby info \r\n    RefreshLobby() {\r\n       
    // For each player data in the multiplayer manager\r\n        MultiplayerPropHuntManager_1.default.instance.playersData.forEach(PlayerData
    => {\r\n            // For each pool element in the pool list\r\n           
    this._lobbyElementPool.GetActiveList().forEach(poolElement => {\r\n               
    let poolElementScript = poolElement.GetComponent($typeof(UIPlayerListTemplate_1.default));\r\n               
    // Check if the session id of the player is equal to the  pool element\r\n               
    if (PlayerData.sessionId == poolElementScript.GetUser()) {\r\n                   
    let teamChanged = PlayerData.isHunter != poolElementScript._isHunter;\r\n                   
    // Then populate the pool element with the player data\r\n                   
    poolElement.GetComponent($typeof(UIPlayerListTemplate_1.default)).Populate(PlayerData.sessionId,
    teamChanged);\r\n                }\r\n            });\r\n        });\r\n    }\r\n   
    // This function updates the txt of the props amount receiving the actual amount
    by parameter\r\n    UpdatePropsCounter(amount) {\r\n        this.txtPropsCounter.text
    = amount.toString() + \"/\" + this.propsAmount.toString();\r\n    }\r\n    //
    This method controls the visual of the timer, normalizing the time to mins and
    secs\r\n    UpdateTimeRemaining(timeRemaining) {\r\n        // We round the value
    of the minutes\r\n        let tempMin = UnityEngine_1.Mathf.FloorToInt(timeRemaining
    / 60);\r\n        // We round the value of the seconds\r\n        let tempSeg
    = UnityEngine_1.Mathf.RoundToInt(timeRemaining % 60);\r\n        // We create
    a text variable for the minutes\r\n        let tempMinString = tempMin <= 0 ?
    \" \" : tempMin.toString() + \" : \";\r\n        // We create a text variable
    for the seconds\r\n        let tempSegString = tempSeg < 10 ? \"0\" + tempSeg
    : tempSeg.toString();\r\n        // We update the \"remaininTxt\" text to a text
    string consisting of \"tempMinString\" and \"tempSegString\"\r\n        this.txtTime.text
    = tempMinString + tempSegString;\r\n    }\r\n    // This functions updates the
    fill amount of the charging icon image\r\n    UpdateChargeFillAmount(percentage)
    {\r\n        this.iconCharge.fillAmount = percentage;\r\n    }\r\n    // This
    function shows or hide the icon of the charging image and position it by parameters\r\n   
    ShowIconPercentage(show, pointerPos) {\r\n        // Activate the icon by the
    passed parameter\r\n        this.icon.SetActive(show);\r\n        // Positioning
    the icon by the parameter\r\n        this.icon.transform.position = pointerPos;\r\n   
    }\r\n    // This function shows the catched text for the hunter\r\n    ShowCatchedText()
    {\r\n        // Call to start a coroutine to show the text\r\n        this.StartCoroutine(this.ShowCatchedTextCoroutine());\r\n   
    }\r\n    // Coroutine to show the catched text \r\n    *ShowCatchedTextCoroutine()
    {\r\n        // Active the text\r\n        this.catchedText.gameObject.SetActive(true);\r\n       
    // Wait 1 second\r\n        yield new UnityEngine_1.WaitForSeconds(1);\r\n       
    // Deactivate the text\r\n        this.catchedText.gameObject.SetActive(false);\r\n   
    }\r\n    // Coroutine to show the prop list\r\n    *ShowPropListCoroutine(show)
    {\r\n        // Set the variables\r\n        let counter = 0;\r\n        let
    maxCounter = 0.15;\r\n        let width = this.rectPropList.sizeDelta.x;\r\n       
    // Set the start and final positions\r\n        let startingPos = this.rectPropList.position;\r\n       
    let finalPos;\r\n        // Move to the right or the left\r\n        if (show)\r\n           
    finalPos = this.limitIn;\r\n        else\r\n            finalPos = this.limitOut;\r\n       
    // Loop\r\n        while (true) {\r\n            yield null;\r\n            //
    Add the time to the counter\r\n            counter += UnityEngine_1.Time.deltaTime;\r\n           
    // Save the percentage of the movement\r\n            let percentage = counter
    / maxCounter;\r\n            // Get the new position by the percentage\r\n           
    let newPosition = UnityEngine_1.Vector3.Lerp(startingPos, finalPos, percentage);\r\n           
    // Set the rect position to the new position\r\n            this.rectPropList.position
    = newPosition;\r\n            // Check if the counter is greater than the max
    counter stop the loop\r\n            if (counter > maxCounter)\r\n               
    return;\r\n        }\r\n    }\r\n    // This function switchs the canvas showed
    for the player\r\n    SwitchGameUI(isHunter = false) {\r\n        // If is not
    hunter then activate the non hunter canvas\r\n        this.nonHunterCanvas.SetActive(!isHunter);\r\n       
    // If is hunter activate the hunter canvas\r\n        this.hunterCanvas.SetActive(isHunter);\r\n   
    }\r\n    // This function shows the blackout screen by a parameter\r\n    ShowBlackoutScreen(value)
    {\r\n        this.huntersBlackoutScreen.SetActive(value);\r\n    }\r\n    //
    This function shows the winner screen by a parameter\r\n    ShowWinScreen(huntersWins)
    {\r\n        // Get the component WinnerScreen from the go saved and call to
    the function SetWinner sending the parameter\r\n        let winnerScript = this.winnerScreen.GetComponent($typeof(WinnerScreen_1.default));\r\n       
    winnerScript.SetWinner(huntersWins);\r\n    }\r\n    // This function hides the
    winner screen\r\n    HideWinnerScreen() {\r\n        this.propsAmount = 0;\r\n       
    this.winnerScreen.SetActive(false);\r\n    }\r\n    // This functions updates
    the counters on the lobby\r\n    UpdateCountersInLobby(isHunter) {\r\n       
    // Check if the new one is hunter and then add one or rest one \r\n        if
    (isHunter) {\r\n            this.propsCounter--;\r\n            this.huntersCounter++;\r\n       
    }\r\n        else {\r\n            this.propsCounter++;\r\n            this.huntersCounter--;\r\n       
    }\r\n        // Limit the minimal number to zero for the two teams\r\n       
    this.huntersCounter = this.LimitToZero(this.huntersCounter);\r\n        this.propsCounter
    = this.LimitToZero(this.propsCounter);\r\n        // Update the texts\r\n       
    this.txtHunterCounter.text = this.huntersCounter.toString();\r\n        this.txtPropCounter.text
    = this.propsCounter.toString();\r\n    }\r\n    // This function addd one to
    the corresponding counter\r\n    AddOneCounterInLobby(isHunter) {\r\n       
    // Check if the new one is hunter and then add one\r\n        if (isHunter) {\r\n           
    this.huntersCounter++;\r\n        }\r\n        else {\r\n            this.propsCounter++;\r\n       
    }\r\n        // Update the texts\r\n        this.txtHunterCounter.text = this.huntersCounter.toString();\r\n       
    this.txtPropCounter.text = this.propsCounter.toString();\r\n    }\r\n    LimitToZero(amount)
    {\r\n        if (amount < 0)\r\n            amount = 0;\r\n        return amount;\r\n   
    }\r\n    // This function returns the hunter parent variable\r\n    GetLobbyHunterParent()
    {\r\n        return this.huntersParent;\r\n    }\r\n    // This function returns
    the non hunter parent variable\r\n    GetLobbyNonHunterParent() {\r\n       
    return this.nonHuntersParent;\r\n    }\r\n}\r\nexports.default = UIManager;\r\n//#
    sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVUlNYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVUlNYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkNBQStIO0FBQy9ILG1EQUF1RDtBQUN2RCxpREFBcUQ7QUFFckQscUVBQThEO0FBQzlELDBGQUF3RztBQUN4RyxxREFBOEM7QUFDOUMsNkRBQXNEO0FBQ3RELDZDQUE0QztBQUM1Qyx1RUFBZ0U7QUFFaEUscUZBQXFGO0FBQ3JGLE1BQXFCLFNBQVUsU0FBUSxxQ0FBcUI7SUFBNUQ7O1FBaUJZLGlCQUFZLEdBQVMsS0FBSyxDQUFDO1FBV1QsZ0JBQVcsR0FBVyxDQUFDLENBQUM7UUFJM0MsaUJBQVksR0FBVyxDQUFDLENBQUM7UUFDekIsbUJBQWMsR0FBVyxDQUFDLENBQUM7SUErT3RDLENBQUM7SUFsT0csS0FBSztRQUNELG9CQUFvQjtRQUNwQixJQTFEQyxxQ0FBcUIsQ0ErSUwsYUFBYyxDQXJGM0IsU0FBUyxDQUFDLFFBQVEsRUFBSSxJQUFJO1lBQUUsd0JBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDOztZQUMvRCxTQUFTLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUUvQix1REFBdUQ7UUFDdkQsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLFNBQUMsMEJBQWdCLEVBQUcsQ0FBQztRQUVoRixJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFO1lBQ3RDLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO1lBQ3ZDLElBQUksSUFBSSxDQUFDLGdCQUFnQjtnQkFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1lBQ3JFLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxxQkFB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","assetPath":"Assets/PropHunt_Template/_Scripts/Managers/UIManager.ts","manifest":{"properties":[{"assembly":"UnityEngine.CoreModule","name":"icon","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.UI","name":"iconCharge","type":"UnityEngine.UI.Image","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"ZEPETO.World.Gui","name":"txtTime","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"teamSelectorObj","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"huntersParent","type":"UnityEngine.Transform","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"nonHuntersParent","type":"UnityEngine.Transform","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"nonHunterCanvas","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"NonHunter\""]},{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"btnpropList","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"propList","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"sliderRot","type":"UnityEngine.UI.Slider","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"hunterCanvas","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Hunter\""]},{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"huntersBlackoutScreen","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"catchedText","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"winnerScreen","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"General\""]},{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"txtPropsCounter","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"mscorlib","name":"propsAmount","type":"System.Single","isArray":false,"initValue":["0"],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"txtPropCounter","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"ZEPETO.World.Gui","name":"txtHunterCounter","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"propsCounter","type":"System.Single","isArray":false,"initValue":["0"],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"huntersCounter","type":"System.Single","isArray":false,"initValue":["0"],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"lobbyElementPool","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"UIManager","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: b88aad814afab1288b2f99d342eab95d
  onlyWriteTrigger: 0
