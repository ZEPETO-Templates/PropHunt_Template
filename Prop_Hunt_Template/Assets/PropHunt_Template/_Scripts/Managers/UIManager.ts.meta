fileFormatVersion: 2
guid: f3eaf574edef5784dab3be7cb1fe1bda
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst UIPlayerListTemplate_1
    = require(\"../UI/UIPlayerListTemplate\");\r\nconst MultiplayerPropHuntManager_1
    = require(\"../Multiplayer/MultiplayerPropHuntManager\");\r\nconst WinnerScreen_1
    = require(\"../UI/WinnerScreen\");\r\nconst LobbyElementPool_1 = require(\"../UI/LobbyElementPool\");\r\n//
    This function is responsible for all the tasks that need to be displayed on the
    UI\r\nclass UIManager extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n   
    constructor() {\r\n        super(...arguments);\r\n        this.propsAmount =
    0;\r\n    }\r\n    Awake() {\r\n        // Singleton pattern\r\n        if (ZEPETO_Script_1.ZepetoScriptBehaviour.op_Inequality(UIManager.instance,
    null))\r\n            UnityEngine_1.GameObject.Destroy(this.gameObject);\r\n       
    else\r\n            UIManager.instance = this;\r\n        // Get the reference
    of the script of the lobby element\r\n        this._lobbyElementPool = this.lobbyElementPool.GetComponent($typeof(LobbyElementPool_1.default));\r\n       
    this.btnpropList.onClick.AddListener(() => {\r\n            this.propList.SetActive(!this.propList.activeSelf);\r\n       
    });\r\n    }\r\n    // This functions is called when one player is added to the
    game\r\n    OnZepetoAddPlayer(sessionId) {\r\n        // Get a reference of an
    element of the pool calling to the function of the script\r\n        let uiElement
    = this._lobbyElementPool.GetElement();\r\n        // populate the ui element
    with the data of the new player\r\n        uiElement.GetComponent($typeof(UIPlayerListTemplate_1.default)).Populate(sessionId);\r\n   
    }\r\n    // This functions is called when someone leaves the game\r\n    OnZepetoRemovePlayer(sessionId)
    {\r\n        // Call to the function of the lobby pool passing the player that
    leaves\r\n        this._lobbyElementPool.ReturnElementById(sessionId);\r\n   
    }\r\n    // This function updates the lobby info \r\n    RefreshLobby() {\r\n       
    // For each player data in the multiplayer manager\r\n        MultiplayerPropHuntManager_1.default.instance.playersData.forEach(PlayerData
    => {\r\n            // For each pool element in the pool list\r\n           
    this._lobbyElementPool.GetActiveList().forEach(poolElement => {\r\n               
    // Check if the session id of the player is equal to the  pool element\r\n               
    if (PlayerData.sessionId == poolElement.GetComponent($typeof(UIPlayerListTemplate_1.default)).GetUser())
    {\r\n                    // Then populate the pool element with the player data\r\n                   
    poolElement.GetComponent($typeof(UIPlayerListTemplate_1.default)).Populate(PlayerData.sessionId);\r\n               
    }\r\n            });\r\n        });\r\n    }\r\n    // This function updates
    the txt of the props amount receiving the actual amount by parameter\r\n    UpdatePropsCounter(amount)
    {\r\n        this.txtPropsCounter.text = amount.toString() + \"/\" + this.propsAmount.toString();\r\n   
    }\r\n    // This method controls the visual of the timer, normalizing the time
    to mins and secs\r\n    UpdateTimeRemaining(timeRemaining) {\r\n        // We
    round the value of the minutes\r\n        let tempMin = UnityEngine_1.Mathf.FloorToInt(timeRemaining
    / 60);\r\n        // We round the value of the seconds\r\n        let tempSeg
    = UnityEngine_1.Mathf.RoundToInt(timeRemaining % 60);\r\n        // We create
    a text variable for the minutes\r\n        let tempMinString = tempMin <= 0 ?
    \" \" : tempMin.toString() + \" : \";\r\n        // We create a text variable
    for the seconds\r\n        let tempSegString = tempSeg < 10 ? \"0\" + tempSeg
    : tempSeg.toString();\r\n        // We update the \"remaininTxt\" text to a text
    string consisting of \"tempMinString\" and \"tempSegString\"\r\n        this.txtTime.text
    = tempMinString + tempSegString;\r\n    }\r\n    // This functions updates the
    fill amount of the charging icon image\r\n    UpdateChargeFillAmount(percentage)
    {\r\n        this.iconCharge.fillAmount = percentage;\r\n    }\r\n    // This
    function shows or hide the icon of the charging image and position it by parameters\r\n   
    ShowIconPercentage(show, pointerPos) {\r\n        // Activate the icon by the
    passed parameter\r\n        this.icon.SetActive(show);\r\n        // Positioning
    the icon by the parameter\r\n        this.icon.transform.position = pointerPos;\r\n   
    }\r\n    // This function shows the catched text for the hunter\r\n    ShowCatchedText()
    {\r\n        // Call to start a coroutine to show the text\r\n        this.StartCoroutine(this.ShowCatchedTextCoroutine());\r\n   
    }\r\n    // Coroutine to show the catched text \r\n    *ShowCatchedTextCoroutine()
    {\r\n        // Active the text\r\n        this.catchedText.gameObject.SetActive(true);\r\n       
    // Wait 1 second\r\n        yield new UnityEngine_1.WaitForSeconds(1);\r\n       
    // Deactivate the text\r\n        this.catchedText.gameObject.SetActive(false);\r\n   
    }\r\n    // This function switchs the canvas showed for the player\r\n    SwitchGameUI(isHunter
    = false) {\r\n        // If is not hunter then activate the non hunter canvas\r\n       
    this.nonHunterCanvas.SetActive(!isHunter);\r\n        // If is hunter activate
    the hunter canvas\r\n        this.hunterCanvas.SetActive(isHunter);\r\n    }\r\n   
    // This function shows the blackout screen by a parameter\r\n    ShowBlackoutScreen(value)
    {\r\n        this.huntersBlackoutScreen.SetActive(value);\r\n    }\r\n    //
    This function shows the winner screen by a parameter\r\n    ShowWinScreen(huntersWins)
    {\r\n        // Get the component WinnerScreen from the go saved and call to
    the function SetWinner sending the parameter\r\n        let winnerScript = this.winnerScreen.GetComponent($typeof(WinnerScreen_1.default));\r\n       
    winnerScript.SetWinner(huntersWins);\r\n    }\r\n    // This function hides the
    winner screen\r\n    HideWinnerScreen() {\r\n        this.propsAmount = 0;\r\n       
    this.winnerScreen.SetActive(false);\r\n    }\r\n    // This function returns
    the hunter parent variable\r\n    GetLobbyHunterParent() {\r\n        return
    this.huntersParent;\r\n    }\r\n    // This function returns the non hunter parent
    variable\r\n    GetLobbyNonHunterParent() {\r\n        return this.nonHuntersParent;\r\n   
    }\r\n}\r\nexports.default = UIManager;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVUlNYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVUlNYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkNBQW9GO0FBRXBGLGlEQUFxRDtBQUVyRCxxRUFBOEQ7QUFDOUQsMEZBQXdHO0FBQ3hHLHFEQUE4QztBQUM5Qyw2REFBc0Q7QUFHdEQscUZBQXFGO0FBQ3JGLE1BQXFCLFNBQVUsU0FBUSxxQ0FBcUI7SUFBNUQ7O1FBMkI4QixnQkFBVyxHQUFXLENBQUMsQ0FBQztJQXNJdEQsQ0FBQztJQWpJRyxLQUFLO1FBQ0Qsb0JBQW9CO1FBQ3BCLElBM0NDLHFDQUFxQixDQW9KYixhQUFjLENBekduQixTQUFTLENBQUMsUUFBUSxFQUFJLElBQUk7WUFBRSx3QkFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7O1lBQy9ELFNBQVMsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1FBRS9CLHVEQUF1RDtRQUN2RCxJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFlBQVksU0FBQywwQkFBZ0IsRUFBRyxDQUFDO1FBRWhGLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxHQUFFLEVBQUU7WUFDckMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3ZELENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELGdFQUFnRTtJQUN6RCxpQkFBaUIsQ0FBQyxTQUFpQjtRQUN0QyxrRkFBa0Y7UUFDbEYsSUFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3BELDBEQUEwRDtRQUMxRCxTQUFTLENBQUMsWUFBWSxTQUFDLDhCQUFvQixHQUFJLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBRUQsd0RBQXdEO0lBQ2pELG9CQUFvQixDQUFDLFNBQWlCO1FBQ3pDLHdFQUF3RTtRQUN4RSxJQUFJLENBQUMsaUJBQWlCLENBQUMsaUJBQWlCLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVELHdDQUF3QztJQUNqQyxZQUFZO1FBQ2Ysa0RBQWtEO1FBQ2xELG9DQUEwQixDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQ2pFLHlDQUF5QztZQUN6QyxJQUFJLENBQUMsaUJBQWlCLENBQUMsYUFBYSxFQUFFLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxFQUFFO2dCQUN6RCxzRUFBc0U7Z0JBQ3RFLElBQUksVUFBVSxDQUFDLFNBQVMsSUFBSSxXQUFXLENBQUMsWUFBWSxTQUFDLDhCQUFvQixHQUFJLE9BQU8sRUFBRSxFQUFFO29CQUNwRixzREFBc0Q7b0JBQ3RELFdBQVcsQ0FBQyxZQUFZLFNBQUMsOEJBQW9CLEdBQUksUUFBUSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQztpQkFDbkY7WUFDTCxDQUFDLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELDZGQUE2RjtJQUM3RixrQkFBa0IsQ0FBQyxNQUFjO1FBQzdCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxRQUFRLEVBQUUsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUN0RixDQUFDO0lBRUQsc0ZBQXNGO0lBQ3RGLG1CQUFtQixDQUFDLGFBQXFCO1FBQ3JDLG9DQUFvQztRQUNwQyxJQUFJLE9BQU8sR0FBVyxtQkFBSyxDQUFDLFVBQVUsQ0FBQyxhQUFhLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFFM0Qsb0NBQW9DO1FBQ3BDLElBQUksT0FBTyxHQUFXLG1CQUFLLENBQUMsVUFBVSxDQUFDLGFBQWEsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUUzRCw0Q0FBNEM7UUFDNUMsSUFBSSxhQUFhLEdBQVcsT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLEdBQUcsS0FBSyxDQUFDO1FBRTVFLDRDQUE0QztRQUM1QyxJQUFJLGFBQWEsR0FBVyxPQUFPLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUM7UUFFOUUsc0dBQXNHO1FBQ3RHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLGFBQWEsR0FBRyxhQUFhLENBQUM7SUFDdEQsQ0FBQztJQUVELG9FQUFvRTtJQUNwRSxzQkFBc0IsQ0FBQyxVQUFrQjtRQUNyQyxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7SUFDNUMsQ0FBQztJQUVELDJGQUEyRjtJQUMzRixrQkFBa0IsQ0FBQyxJQUFVLEVBQUUsVUFBbUI7UUFDOUMsNENBQTRDO1FBQzVDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzFCLHdDQUF3QztRQUN4QyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEdBQUcsVUFBVSxDQUFDO0lBQzlDLENBQUM7SUFFRCxzREFBc0Q7SUFDdEQsZUFBZTtRQUNYLDZDQUE2QztRQUM3QyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyx3QkFBd0IsRUFBRSxDQUFDLENBQUM7SUFDekQsQ0FBQztJQUVELHNDQUFzQztJQUN0QyxDQUFDLHdCQUF3QjtRQUNyQixrQkFBa0I7UUFDbEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVDLGdCQUFnQjtRQUNoQixNQUFNLElBQUksNEJBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM1QixzQkFBc0I7UUFDdEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFFRCx5REFBeUQ7SUFDekQsWUFBWSxDQUFDLFdBQW9CLEtBQUs7UUFDbEMsdURBQXVEO1FBQ3ZELElBQUksQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDMUMsMENBQTBDO1FBQzFDLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCx5REFBeUQ7SUFDekQsa0JBQWtCLENBQUMsS0FBYztRQUM3QixJQUFJLENBQUMscUJBQXFCLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFRCx1REFBdUQ7SUFDdkQsYUFBYSxDQUFDLFdBQW9CO1FBQzlCLDRHQUE0RztRQUM1RyxJQUFJLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFlBQVksU0FBQyxzQkFBWSxFQUFHLENBQUM7UUFDbEUsWUFBWSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQsd0NBQXdDO0lBQ3hDLGdCQUFnQjtRQUNaLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxtREFBbUQ7SUFDNUMsb0JBQW9CO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM5QixDQUFDO0lBRUQsdURBQXVEO0lBQ2hELHVCQUF1QjtRQUMxQixPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztJQUNqQyxDQUFDO0NBQ0o7QUFqS0QsNEJBaUtDIn0=","assetPath":"Assets/PropHunt_Template/_Scripts/Managers/UIManager.ts","manifest":{"properties":[{"assembly":"UnityEngine.CoreModule","name":"icon","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.UI","name":"iconCharge","type":"UnityEngine.UI.Image","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"ZEPETO.World.Gui","name":"txtTime","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"teamSelectorObj","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"huntersParent","type":"UnityEngine.Transform","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"nonHuntersParent","type":"UnityEngine.Transform","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"nonHunterCanvas","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"NonHunter\""]},{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"btnpropList","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"propList","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"sliderRot","type":"UnityEngine.UI.Slider","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"hunterCanvas","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Hunter\""]},{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"huntersBlackoutScreen","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"catchedText","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"winnerScreen","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"General\""]},{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"txtPropsCounter","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"mscorlib","name":"propsAmount","type":"System.Single","isArray":false,"initValue":["0"],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"lobbyElementPool","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"UIManager","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: abd58141dc45405a6f7813faf3a8bde3
  onlyWriteTrigger: 0
