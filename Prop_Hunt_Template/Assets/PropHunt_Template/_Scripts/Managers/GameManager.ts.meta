fileFormatVersion: 2
guid: 43b621a64f37651488c75c2bdda1d913
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst NonHunterController_1
    = require(\"../Player/NonHunterController\");\r\nconst UnityEngine_2 = require(\"UnityEngine\");\r\nconst
    UIManager_1 = require(\"./UIManager\");\r\nconst MultiplayerPropHuntManager_1
    = require(\"../Multiplayer/MultiplayerPropHuntManager\");\r\nconst ZEPETO_Character_Controller_1
    = require(\"ZEPETO.Character.Controller\");\r\nconst HunterController_1 = require(\"../Player/HunterController\");\r\nconst
    UnityEngine_Events_1 = require(\"UnityEngine.Events\");\r\n// This class manages
    the calls and connections between different scripts and the basic operation of
    the game\r\nclass GameManager extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n   
    constructor() {\r\n        super(...arguments);\r\n        this.OnReset = new
    UnityEngine_Events_1.UnityEvent();\r\n    }\r\n    Awake() {\r\n        // Singleton
    pattern\r\n        if (ZEPETO_Script_1.ZepetoScriptBehaviour.op_Inequality(GameManager.instance,
    null))\r\n            UnityEngine_1.GameObject.Destroy(this.gameObject);\r\n       
    else\r\n            GameManager.instance = this;\r\n    }\r\n    Start() {\r\n       
    // Call to the function SetGameState\r\n        this.SetGameState(GameState.CHOOSING_TEAM);\r\n       
    // When add the local player\r\n        ZEPETO_Character_Controller_1.ZepetoPlayers.instance.OnAddedLocalPlayer.AddListener(()
    => {\r\n            // Get the reference of the zepeto ui control\r\n           
    this.zepetoControl = UnityEngine_1.GameObject.FindObjectOfType($typeof(ZEPETO_Character_Controller_1.UIZepetoPlayerControl));\r\n           
    // Deactivate the UI for control\r\n            this.ActiveControls(false);\r\n       
    });\r\n    }\r\n    Update() {\r\n        // Check if the game has started and
    returns if not\r\n        if (!GameManager.gameStarted)\r\n            return;\r\n       
    // Call to the function that controls the remaining time CheckRemainingTime\r\n       
    this.CheckRemainingTime();\r\n    }\r\n    // This function sets the game state
    by the parameter\r\n    SetGameState(gameState) {\r\n        // Set the variable
    to the value passed as parameter\r\n        this.gameState = gameState;\r\n       
    // The switch into the diferent enum values\r\n        switch (gameState) {\r\n           
    // If Choosing team\r\n            case GameState.CHOOSING_TEAM:\r\n               
    // Set the gameStarted on false\r\n                GameManager.gameStarted =
    false;\r\n                break;\r\n            // If starts the props hiding\r\n           
    case GameState.PROPS_HIDING:\r\n                // Set the gameStarted on true\r\n               
    GameManager.gameStarted = true;\r\n                // Set the remaining time
    to the time to hide\r\n                this.timeRemaining = this.timeToHide;\r\n               
    break;\r\n            // If starts hunters searching\r\n            case GameState.HUNTERS_SEARCHING:\r\n               
    // Set the remaining time to the time per game\r\n                this.timeRemaining
    = this.timePerGame;\r\n                break;\r\n            // If starts the
    game finish \r\n            case GameState.GAME_FINISH:\r\n                break;\r\n       
    }\r\n    }\r\n    // This function set all the start of the game\r\n    StartGame()
    {\r\n        // For each player in playerData of MultiplayerPropHuntManager\r\n       
    MultiplayerPropHuntManager_1.default.instance.playersData.forEach((player) =>
    {\r\n            // Get a zepetoPlayer by the player.sessionId\r\n           
    const zepetoPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(player.sessionId).character.gameObject;\r\n           
    // Check if the player is hunter\r\n            if (player.isHunter) {\r\n               
    // Add the component of the hunter\r\n                zepetoPlayer.AddComponent($typeof(HunterController_1.default));\r\n           
    }\r\n            else {\r\n                // Add the component of the nonHunter/prop\r\n               
    zepetoPlayer.AddComponent($typeof(NonHunterController_1.default));\r\n           
    }\r\n        });\r\n        // Call to the function ShowBlackoutOnHunters\r\n       
    this.ShowBlackoutOnHunters(true);\r\n        // Set the time remaining to the
    time to hide\r\n        this.timeRemaining = this.timeToHide;\r\n        // Set
    the gameStarted to true\r\n        GameManager.gameStarted = true;\r\n       
    // Call to the function to set the game state to props hiding\r\n        this.SetGameState(GameState.PROPS_HIDING);\r\n       
    // Unactive the team selector on the UIManager\r\n        UIManager_1.default.instance.teamSelectorObj.SetActive(false);\r\n       
    // Activate the control ui\r\n        this.ActiveControls(true);\r\n    }\r\n   
    // This function change the gameStarted to false\r\n    StopGame() {\r\n       
    GameManager.gameStarted = false;\r\n    }\r\n    // This function activate the
    ui for movement of zepeto by the parameter\r\n    ActiveControls(active) {\r\n       
    // Activate the object depending on the parameter\r\n        this.zepetoControl.gameObject.SetActive(active);\r\n   
    }\r\n    // This function add a non hunter to the team\r\n    AddOneNonHunter()
    {\r\n        this.nonHuntersLeft++;\r\n    }\r\n    // This function rest a non
    hunter to the team\r\n    RestOneNonHunter() {\r\n        this.nonHuntersLeft--;\r\n       
    // Call to the function to check the number of non hunters\r\n        this.CheckRemainingNonHunters();\r\n   
    }\r\n    // This function checks if there are nonHunters not catched\r\n    CheckRemainingNonHunters()
    {\r\n        // Check if there are non hunters if it is return\r\n        if
    (this.nonHuntersLeft > 0 || !GameManager.gameStarted)\r\n            return;\r\n       
    // If there aren''t call to the function to select the team winner\r\n       
    this.SelectTeamWins(true);\r\n    }\r\n    // This function checks the remaining
    time\r\n    CheckRemainingTime() {\r\n        // Reduce the remaining time in
    real time\r\n        this.timeRemaining -= UnityEngine_2.Time.deltaTime;\r\n       
    // Call to the function to show the time on the UIManager\r\n        UIManager_1.default.instance.UpdateTimeRemaining(this.timeRemaining);\r\n       
    // Check if the remaining time is less or equal to 0\r\n        if (this.timeRemaining
    <= 0) {\r\n            // Check if we are in the hiding state\r\n           
    if (this.gameState == GameState.PROPS_HIDING) {\r\n                // Call to
    the function to hide the blackout on hunters\r\n                this.ShowBlackoutOnHunters(false);\r\n               
    // Call to the function to set the game state on searching\r\n               
    this.SetGameState(GameState.HUNTERS_SEARCHING);\r\n            }\r\n           
    // check if we are in the Searching state\r\n            else if (this.gameState
    == GameState.HUNTERS_SEARCHING) {\r\n                // Call to the function
    to set the winner\r\n                this.SelectTeamWins(false);\r\n           
    }\r\n        }\r\n    }\r\n    // This function actives the blackout screen on
    the hunters\r\n    ShowBlackoutOnHunters(value) {\r\n        // Call to the function
    that shows the blackout screen passing a parameter to active or not\r\n       
    UIManager_1.default.instance.ShowBlackoutScreen(value);\r\n    }\r\n    // This
    function select wich team is the winner\r\n    SelectTeamWins(huntersWins) {\r\n       
    // Call to the function to set the player ready state\r\n        MultiplayerPropHuntManager_1.default.instance.SwitchReady();\r\n       
    // Call to the function to stop the game\r\n        this.StopGame();\r\n       
    // Call to the function to set the game state on finish\r\n        this.SetGameState(GameState.GAME_FINISH);\r\n       
    // Call to the function to show the winner screen on the UIManager\r\n       
    UIManager_1.default.instance.ShowWinScreen(huntersWins);\r\n    }\r\n    // This
    function resets the game to be ready to start another one\r\n    ResetGame()
    {\r\n        // For each player on the game\r\n        MultiplayerPropHuntManager_1.default.instance.playersData.forEach((player)
    => {\r\n            // Get a reference of the player with the sessionId\r\n           
    const zepetoPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(player.sessionId);\r\n           
    // Save a variable to know if the player is the local player\r\n            let
    isLocal = zepetoPlayer == ZEPETO_Character_Controller_1.ZepetoPlayers.instance.LocalPlayer.zepetoPlayer;\r\n           
    // Create a variable to reset the script of the player\r\n            let gameScript;\r\n           
    // Get a reference of the NonHunterController if the player has one\r\n           
    gameScript = zepetoPlayer.character.GetComponent($typeof(NonHunterController_1.default));\r\n           
    // If gameScript is not null\r\n            if (gameScript) {\r\n               
    // Call to the function in the script for reset the nonHunter\r\n               
    gameScript.ResetNonHunter(isLocal);\r\n                // Destroy the script\r\n               
    UnityEngine_1.GameObject.Destroy(gameScript);\r\n            }\r\n           
    else {\r\n                // Get a reference of the HunterController if the player
    has one\r\n                gameScript = zepetoPlayer.character.GetComponent($typeof(HunterController_1.default));\r\n               
    // Check if the script is not null then destroy the script\r\n               
    if (gameScript)\r\n                    UnityEngine_1.GameObject.Destroy(gameScript);\r\n           
    }\r\n            // Teleport the player to the spawnpoint\r\n            zepetoPlayer.character.Teleport(this.spawnPoint.position,
    this.spawnPoint.rotation);\r\n        });\r\n        // Active the team selector
    screen from the UIManager\r\n        UIManager_1.default.instance.teamSelectorObj.SetActive(true);\r\n       
    // Switch the game state into choosing team\r\n        this.SetGameState(GameState.CHOOSING_TEAM);\r\n       
    // Check if the event \"OnReset\" is not null and call it if not\r\n        if
    (this.OnReset != null)\r\n            this.OnReset.Invoke();\r\n    }\r\n}\r\nexports.default
    = GameManager;\r\nGameManager.gameStarted = false; // Controls if the game has
    started\r\n// Enum that contains the Game state types\r\nvar GameState;\r\n(function
    (GameState) {\r\n    GameState[GameState[\"CHOOSING_TEAM\"] = 0] = \"CHOOSING_TEAM\";\r\n   
    GameState[GameState[\"PROPS_HIDING\"] = 1] = \"PROPS_HIDING\";\r\n    GameState[GameState[\"HUNTERS_SEARCHING\"]
    = 2] = \"HUNTERS_SEARCHING\";\r\n    GameState[GameState[\"GAME_FINISH\"] = 3]
    = \"GAME_FINISH\";\r\n})(GameState || (GameState = {}));\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2FtZU1hbmFnZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJHYW1lTWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZDQUErRDtBQUMvRCxpREFBcUQ7QUFDckQsdUVBQWdFO0FBQ2hFLDZDQUFtQztBQUNuQywyQ0FBb0M7QUFDcEMsMEZBQW1GO0FBQ25GLDZFQUF3RztBQUN4RyxpRUFBMEQ7QUFDMUQsMkRBQWdEO0FBRWhELDZHQUE2RztBQUM3RyxNQUFxQixXQUFZLFNBQVEscUNBQXFCO0lBQTlEOztRQUc4QixZQUFPLEdBQWUsSUFBSSwrQkFBVSxFQUFFLENBQUM7SUE4TnJFLENBQUM7SUEzTUcsS0FBSztRQUNELG9CQUFvQjtRQUNwQixJQWxDQyxxQ0FBcUIsQ0EyS0wsYUFBYyxDQXpJM0IsV0FBVyxDQUFDLFFBQVEsRUFBSSxJQUFJO1lBQUUsd0JBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDOztZQUNqRSxXQUFXLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztJQUNyQyxDQUFDO0lBRUQsS0FBSztRQUNELG9DQUFvQztRQUNwQyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUUzQyw0QkFBNEI7UUFDNUIsMkNBQWEsQ0FBQyxRQUFRLENBQUMsa0JBQWtCLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRTtZQUN2RCw2Q0FBNkM7WUFDN0MsSUFBSSxDQUFDLGFBQWEsR0FBRyx3QkFBVSxDQUFDLGdCQUFnQixTQUFDLG1EQUFxQixFQUFHLENBQUM7WUFDMUUsZ0NBQWdDO1lBQ2hDLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDL0IsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsTUFBTTtRQUNGLG1EQUFtRDtRQUNuRCxJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVc7WUFBRSxPQUFPO1FBQ3JDLDJFQUEyRTtRQUMzRSxJQUFJ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","assetPath":"Assets/PropHunt_Template/_Scripts/Managers/GameManager.ts","manifest":{"properties":[{"assembly":"UnityEngine.CoreModule","name":"OnReset","type":"UnityEngine.Events.UnityEvent","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"","name":"gameState","type":"GameState","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"spawnPoint","type":"UnityEngine.Transform","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"timePerGame","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"timeRemaining","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"mscorlib","name":"timeToHide","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"timeToCatch","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Hunter\""]}]},{"assembly":"UnityEngine.CoreModule","name":"playerLayer","type":"UnityEngine.LayerMask","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"GameManager","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: 43bf6f7e7ed286b03cda98f9a3e06ec8
  onlyWriteTrigger: 0
