fileFormatVersion: 2
guid: 43b621a64f37651488c75c2bdda1d913
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst NonHunterController_1
    = require(\"../Player/NonHunterController\");\r\nconst UnityEngine_2 = require(\"UnityEngine\");\r\nconst
    UIManager_1 = require(\"./UIManager\");\r\nconst MultiplayerPropHuntManager_1
    = require(\"../Multiplayer/MultiplayerPropHuntManager\");\r\nconst ZEPETO_Character_Controller_1
    = require(\"ZEPETO.Character.Controller\");\r\nconst HunterController_1 = require(\"../Player/HunterController\");\r\nconst
    UnityEngine_Events_1 = require(\"UnityEngine.Events\");\r\nconst RandomSpawner_1
    = require(\"./RandomSpawner\");\r\n// This class manages the calls and connections
    between different scripts and the basic operation of the game\r\nclass GameManager
    extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor() {\r\n       
    super(...arguments);\r\n        this.OnReset = new UnityEngine_Events_1.UnityEvent();\r\n   
    }\r\n    Awake() {\r\n        // Singleton pattern\r\n        if (ZEPETO_Script_1.ZepetoScriptBehaviour.op_Inequality(GameManager.instance,
    null))\r\n            UnityEngine_1.GameObject.Destroy(this.gameObject);\r\n       
    else\r\n            GameManager.instance = this;\r\n    }\r\n    Start() {\r\n       
    // Call to the function SetGameState\r\n        this.SetGameState(GameState.CHOOSING_TEAM);\r\n       
    // When add the local player\r\n        ZEPETO_Character_Controller_1.ZepetoPlayers.instance.OnAddedLocalPlayer.AddListener(()
    => {\r\n            // Get the reference of the zepeto ui control\r\n           
    this.zepetoControl = UnityEngine_1.GameObject.FindObjectOfType($typeof(ZEPETO_Character_Controller_1.UIZepetoPlayerControl));\r\n           
    // Deactivate the UI for control\r\n            this.ActiveControls(false);\r\n       
    });\r\n    }\r\n    Update() {\r\n        // Check if the game has started and
    returns if not\r\n        if (!GameManager.gameStarted)\r\n            return;\r\n       
    // Call to the function that controls the remaining time CheckRemainingTime\r\n       
    this.CheckRemainingTime();\r\n    }\r\n    // This function sets the game state
    by the parameter\r\n    SetGameState(gameState) {\r\n        // Set the variable
    to the value passed as parameter\r\n        this.gameState = gameState;\r\n       
    // The switch into the diferent enum values\r\n        switch (gameState) {\r\n           
    // If Choosing team\r\n            case GameState.CHOOSING_TEAM:\r\n               
    // Set the gameStarted on false\r\n                GameManager.gameStarted =
    false;\r\n                break;\r\n            // If starts the props hiding\r\n           
    case GameState.PROPS_HIDING:\r\n                // Set the gameStarted on true\r\n               
    GameManager.gameStarted = true;\r\n                // Set the remaining time
    to the time to hide\r\n                this.timeRemaining = this.timeToHide;\r\n               
    break;\r\n            // If starts hunters searching\r\n            case GameState.HUNTERS_SEARCHING:\r\n               
    // Set the remaining time to the time per game\r\n                this.timeRemaining
    = this.timePerGame;\r\n                break;\r\n            // If starts the
    game finish \r\n            case GameState.GAME_FINISH:\r\n                break;\r\n       
    }\r\n    }\r\n    // This function set all the start of the game\r\n    StartGame()
    {\r\n        // For each player in playerData of MultiplayerPropHuntManager\r\n       
    MultiplayerPropHuntManager_1.default.instance.playersData.forEach((player) =>
    {\r\n            // Get a zepetoPlayer by the player.sessionId\r\n           
    const zepetoPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(player.sessionId).character.gameObject;\r\n           
    // Check if the player is hunter\r\n            if (player.isHunter) {\r\n               
    // Add the component of the hunter\r\n                zepetoPlayer.AddComponent($typeof(HunterController_1.default));\r\n           
    }\r\n            else {\r\n                // Add the component of the nonHunter/prop\r\n               
    zepetoPlayer.AddComponent($typeof(NonHunterController_1.default));\r\n           
    }\r\n        });\r\n        // Call to the function ShowBlackoutOnHunters\r\n       
    this.ShowBlackoutOnHunters(true);\r\n        // Set the time remaining to the
    time to hide\r\n        this.timeRemaining = this.timeToHide;\r\n        // Set
    the gameStarted to true\r\n        GameManager.gameStarted = true;\r\n       
    // Call to the function to set the game state to props hiding\r\n        this.SetGameState(GameState.PROPS_HIDING);\r\n       
    // Unactive the team selector on the UIManager\r\n        UIManager_1.default.instance.teamSelectorObj.SetActive(false);\r\n       
    // Activate the control ui\r\n        this.ActiveControls(true);\r\n    }\r\n   
    // This function change the gameStarted to false\r\n    StopGame() {\r\n       
    GameManager.gameStarted = false;\r\n    }\r\n    // This function activate the
    ui for movement of zepeto by the parameter\r\n    ActiveControls(active) {\r\n       
    // Activate the object depending on the parameter\r\n        this.zepetoControl.gameObject.SetActive(active);\r\n   
    }\r\n    // This function add a non hunter to the team\r\n    AddOneNonHunter()
    {\r\n        this.nonHuntersLeft++;\r\n    }\r\n    // This function rest a non
    hunter to the team\r\n    RestOneNonHunter() {\r\n        this.nonHuntersLeft--;\r\n       
    // Call to the function to check the number of non hunters\r\n        this.CheckRemainingNonHunters();\r\n   
    }\r\n    // This function checks if there are nonHunters not catched\r\n    CheckRemainingNonHunters()
    {\r\n        // Check if there are non hunters if it is return\r\n        if
    (this.nonHuntersLeft > 0 || !GameManager.gameStarted)\r\n            return;\r\n       
    // If there aren''t call to the function to select the team winner\r\n       
    this.SelectTeamWins(true);\r\n    }\r\n    // This function checks the remaining
    time\r\n    CheckRemainingTime() {\r\n        // Reduce the remaining time in
    real time\r\n        this.timeRemaining -= UnityEngine_2.Time.deltaTime;\r\n       
    // Call to the function to show the time on the UIManager\r\n        UIManager_1.default.instance.UpdateTimeRemaining(this.timeRemaining);\r\n       
    // Check if the remaining time is less or equal to 0\r\n        if (this.timeRemaining
    <= 0) {\r\n            // Check if we are in the hiding state\r\n           
    if (this.gameState == GameState.PROPS_HIDING) {\r\n                // Call to
    the function to hide the blackout on hunters\r\n                this.ShowBlackoutOnHunters(false);\r\n               
    // Call to the function to set the game state on searching\r\n               
    this.SetGameState(GameState.HUNTERS_SEARCHING);\r\n            }\r\n           
    // check if we are in the Searching state\r\n            else if (this.gameState
    == GameState.HUNTERS_SEARCHING) {\r\n                // Call to the function
    to set the winner\r\n                this.SelectTeamWins(false);\r\n           
    }\r\n        }\r\n    }\r\n    // This function actives the blackout screen on
    the hunters\r\n    ShowBlackoutOnHunters(value) {\r\n        // Call to the function
    that shows the blackout screen passing a parameter to active or not\r\n       
    UIManager_1.default.instance.ShowBlackoutScreen(value);\r\n    }\r\n    // This
    function select wich team is the winner\r\n    SelectTeamWins(huntersWins) {\r\n       
    // Call to the function to set the player ready state\r\n        MultiplayerPropHuntManager_1.default.instance.SwitchReady();\r\n       
    // Call to the function to stop the game\r\n        this.StopGame();\r\n       
    // Call to the function to set the game state on finish\r\n        this.SetGameState(GameState.GAME_FINISH);\r\n       
    // Call to the function to show the winner screen on the UIManager\r\n       
    UIManager_1.default.instance.ShowWinScreen(huntersWins);\r\n    }\r\n    // This
    function resets the game to be ready to start another one\r\n    ResetGame()
    {\r\n        // For each player on the game\r\n        MultiplayerPropHuntManager_1.default.instance.playersData.forEach((player)
    => {\r\n            // Get a reference of the player with the sessionId\r\n           
    const zepetoPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(player.sessionId);\r\n           
    // Save a variable to know if the player is the local player\r\n            let
    isLocal = zepetoPlayer == ZEPETO_Character_Controller_1.ZepetoPlayers.instance.LocalPlayer.zepetoPlayer;\r\n           
    // Create a variable to reset the script of the player\r\n            let gameScript;\r\n           
    // Get a reference of the NonHunterController if the player has one\r\n           
    gameScript = zepetoPlayer.character.GetComponent($typeof(NonHunterController_1.default));\r\n           
    // If gameScript is not null\r\n            if (gameScript) {\r\n               
    // Call to the function in the script for reset the nonHunter\r\n               
    gameScript.ResetNonHunter(isLocal);\r\n                // Destroy the script\r\n               
    UnityEngine_1.GameObject.Destroy(gameScript);\r\n            }\r\n           
    else {\r\n                // Get a reference of the HunterController if the player
    has one\r\n                gameScript = zepetoPlayer.character.GetComponent($typeof(HunterController_1.default));\r\n               
    // Check if the script is not null then destroy the script\r\n               
    if (gameScript)\r\n                    UnityEngine_1.GameObject.Destroy(gameScript);\r\n           
    }\r\n            // Get a new random spawn\r\n            let spawnpoint = RandomSpawner_1.default.instance.GetRandomSpawnPos();\r\n           
    // Teleport the player to the spawnpoint\r\n            zepetoPlayer.character.Teleport(spawnpoint,
    UnityEngine_1.Quaternion.identity);\r\n        });\r\n        // Active the team
    selector screen from the UIManager\r\n        UIManager_1.default.instance.teamSelectorObj.SetActive(true);\r\n       
    // Switch the game state into choosing team\r\n        this.SetGameState(GameState.CHOOSING_TEAM);\r\n       
    // Check if the event \"OnReset\" is not null and call it if not\r\n        if
    (this.OnReset != null)\r\n            this.OnReset.Invoke();\r\n    }\r\n}\r\nexports.default
    = GameManager;\r\nGameManager.gameStarted = false; // Controls if the game has
    started\r\n// Enum that contains the Game state types\r\nvar GameState;\r\n(function
    (GameState) {\r\n    GameState[GameState[\"CHOOSING_TEAM\"] = 0] = \"CHOOSING_TEAM\";\r\n   
    GameState[GameState[\"PROPS_HIDING\"] = 1] = \"PROPS_HIDING\";\r\n    GameState[GameState[\"HUNTERS_SEARCHING\"]
    = 2] = \"HUNTERS_SEARCHING\";\r\n    GameState[GameState[\"GAME_FINISH\"] = 3]
    = \"GAME_FINISH\";\r\n})(GameState || (GameState = {}));\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2FtZU1hbmFnZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJHYW1lTWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZDQUEyRTtBQUMzRSxpREFBcUQ7QUFDckQsdUVBQWdFO0FBQ2hFLDZDQUFtQztBQUNuQywyQ0FBb0M7QUFDcEMsMEZBQW1GO0FBQ25GLDZFQUF3RztBQUN4RyxpRUFBMEQ7QUFDMUQsMkRBQWdEO0FBQ2hELG1EQUE0QztBQUU1Qyw2R0FBNkc7QUFDN0csTUFBcUIsV0FBWSxTQUFRLHFDQUFxQjtJQUE5RDs7UUFHOEIsWUFBTyxHQUFlLElBQUksK0JBQVUsRUFBRSxDQUFDO0lBK05yRSxDQUFDO0lBOU1HLEtBQUs7UUFDRCxvQkFBb0I7UUFDcEIsSUFqQ0MscUNBQXFCLENBMEtlLGFBQWMsQ0F6SS9DLFdBQVcsQ0FBQyxRQUFRLEVBQUksSUFBSTtZQUFFLHdCQUFVLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQzs7WUFDakUsV0FBVyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDckMsQ0FBQztJQUVELEtBQUs7UUFDRCxvQ0FBb0M7UUFDcEMsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFM0MsNEJBQTRCO1FBQzVCLDJDQUFhLENBQUMsUUFBUSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUU7WUFDdkQsNkNBQTZDO1lBQzdDLElBQUksQ0FBQyxhQUFhLEdBQUcsd0JBQVUsQ0FBQyxnQkFBZ0IsU0FBQyxtREFBcUIsRUFBRyxDQUFDO1lBQzFFLGdDQUFnQztZQUNoQyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQy9CLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELE1BQU07UUFDRixtREFBbUQ7UUFDbkQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXO1lBQUUsT0FBTztRQUNyQywyRUFBMkU7UUFDM0UsSUFBSSxDQUFDLGtCQUFrQixFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVELHFEQUFxRDtJQUM5QyxZQUFZLENBQUMsU0FBb0I7UUFDcEMsb0RBQW9EO1FBQ3BELElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBRTNCLDJDQUEyQztRQUMzQyxRQUFRLFNBQVMsRUFBRTtZQUNmLG1CQUFtQjtZQUNuQixLQUFLLFNBQVMsQ0FBQyxhQUFhO2dCQUN4QiwrQkFBK0I7Z0JBQy9CLFdBQVcsQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO2dCQUNoQyxNQUFNO1lBQ1YsNkJBQTZCO1lBQzdCLEtBQUssU0FBUyxDQUFDLFlBQVk7Z0JBQ3ZCLDhCQUE4QjtnQkFDOUIsV0FBVyxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7Z0JBQy9CLDZDQUE2QztnQkFDN0MsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO2dCQUNyQyxNQUFNO1lBQ1YsOEJBQThCO1lBQzlCLEtBQUssU0FBUyxDQUFDLGlCQUFpQjtnQkFDNUIsOENBQThDO2dCQUM5QyxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7Z0JBQ3RDLE1BQU07WUFDViw2QkFBNkI7WUFDN0IsS0FBSyxTQUFTLENBQUMsV0FBVztnQkFDdEIsTUFBTTtTQUNiO0lBQ0wsQ0FBQztJQUVELDhDQUE4QztJQUM5QyxTQUFTO1FBQ0wsOERBQThEO1FBQzlELG9DQUEwQixDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDL0QsNkNBQTZDO1lBQzdDLE1BQU0sWUFBWSxHQUFHLDJDQUFhLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQztZQUU3RixnQ0FBZ0M7WUFDaEMsSUFBSSxNQUFNLENBQUMsUUFBUSxFQUFFO2dCQUNqQixrQ0FBa0M7Z0JBQ2xDLFlBQVksQ0FBQyxZQUFZLFNBQUMsMEJBQWdCLEdBQUk7YUFDakQ7aUJBQ0k7Z0JBQ0QsMENBQTBDO2dCQUMxQyxZQUFZLENBQUMsWUFBWSxTQUFDLDZCQUFtQixHQUFJO2FBQ3BEO1FBQ0wsQ0FBQyxDQUFDLENBQUM7UUFFSCw2Q0FBNkM7UUFDN0MsSUFBSSxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBRWpDLDZDQUE2QztRQUM3QyxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7UUFDckMsOEJBQThCO1FBQzlCLFdBQVcsQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQy9CLDZEQUE2RDtRQUM3RCxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUUxQyw4Q0FBOEM7UUFDOUMsbUJBQVMsQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUVwRCwwQkFBMEI7UUFDMUIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQsZ0RBQWdEO0lBQ2hELFFBQVE7UUFDSixXQUFXLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztJQUNwQyxDQUFDO0lBRUQsd0VBQXdFO0lBQ3hFLGNBQWMsQ0FBQyxNQUFXO1FBQ3RCLGlEQUFpRDtRQUNqRCxJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVELDZDQUE2QztJQUM3QyxlQUFlO1FBQ1gsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFFRCw4Q0FBOEM7SUFDOUMsZ0JBQWdCO1FBQ1osSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBRXRCLDBEQUEwRDtRQUMxRCxJQUFJLENBQUMsd0JBQXdCLEVBQUUsQ0FBQztJQUNwQyxDQUFDO0lBRUQsMkRBQTJEO0lBQzNELHdCQUF3QjtRQUNwQixpREFBaUQ7UUFDakQsSUFBSSxJQUFJLENBQUMsY0FBYyxHQUFHLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXO1lBQUUsT0FBTztRQUNoRSxpRUFBaUU7UUFDakUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQsMENBQTBDO0lBQzFDLGtCQUFrQjtRQUNkLHlDQUF5QztRQUN6QyxJQUFJLENBQUMsYUFBYSxJQUFJLGtCQUFJLENBQUMsU0FBUyxDQUFDO1FBQ3JDLHlEQUF5RDtRQUN6RCxtQkFBUyxDQUFDLFFBQVEsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDM0Qsb0RBQW9EO1FBQ3BELElBQUksSUFBSSxDQUFDLGFBQWEsSUFBSSxDQUFDLEVBQUU7WUFDekIsc0NBQXNDO1lBQ3RDLElBQUksSUFBSSxDQUFDLFNBQVMsSUFBSSxTQUFTLENBQUMsWUFBWSxFQUFFO2dCQUMxQyx1REFBdUQ7Z0JBQ3ZELElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDbEMsMERBQTBEO2dCQUMxRCxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO2FBQ2xEO1lBQ0QseUNBQXlDO2lCQUNwQyxJQUFJLElBQUksQ0FBQyxTQUFTLElBQUksU0FBUyxDQUFDLGlCQUFpQixFQUFFO2dCQUNwRCx5Q0FBeUM7Z0JBQ3pDLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDOUI7U0FDSjtJQUNMLENBQUM7SUFFRCwyREFBMkQ7SUFDM0QscUJBQXFCLENBQUMsS0FBYztRQUNoQywyRkFBMkY7UUFDM0YsbUJBQVMsQ0FBQyxRQUFRLENBQUMsa0JBQWtCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELCtDQUErQztJQUMvQyxjQUFjLENBQUMsV0FBb0I7UUFDL0IscURBQXFEO1FBQ3JELG9DQUEwQixDQUFDLFFBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNsRCx3Q0FBd0M7UUFDeEMsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBRWhCLHVEQUF1RDtRQUN2RCxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUV6QyxrRUFBa0U7UUFDbEUsbUJBQVMsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFRCxpRUFBaUU7SUFDakUsU0FBUztRQUNMLDhCQUE4QjtRQUM5QixvQ0FBMEIsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFO1lBQy9ELG1EQUFtRDtZQUNuRCxNQUFNLFlBQVksR0FBRywyQ0FBYSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ3hFLDREQUE0RDtZQUM1RCxJQUFJLE9BQU8sR0FBRyxZQUFZLElBQUksMkNBQWEsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQztZQUM5RSxzREFBc0Q7WUFDdEQsSUFBSSxVQUFVLENBQUM7WUFFZixtRUFBbUU7WUFDbkUsVUFBVSxHQUFHLFlBQVksQ0FBQyxTQUFTLENBQUMsWUFBWSxTQUFDLDZCQUFtQixFQUFHLENBQUM7WUFDeEUsNEJBQTRCO1lBQzVCLElBQUksVUFBVSxFQUFFO2dCQUNaLDZEQUE2RDtnQkFDN0QsVUFBVSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDbkMscUJBQXFCO2dCQUNyQix3QkFBVSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQzthQUNsQztpQkFBTTtnQkFDSCxnRUFBZ0U7Z0JBQ2hFLFVBQVUsR0FBRyxZQUFZLENBQUMsU0FBUyxDQUFDLFlBQVksU0FBQywwQkFBZ0IsRUFBRyxDQUFDO2dCQUNyRSwwREFBMEQ7Z0JBQzFELElBQUksVUFBVTtvQkFBRSx3QkFBVSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQzthQUNsRDtZQUNELHlCQUF5QjtZQUN6QixJQUFJLFVBQVUsR0FBRyx1QkFBYSxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1lBRTVELHdDQUF3QztZQUN4QyxZQUFZLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxVQUFVLEVBQUUsd0JBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNyRSxDQUFDLENBQUMsQ0FBQztRQUVILHFEQUFxRDtRQUNyRCxtQkFBUyxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRW5ELDJDQUEyQztRQUMzQyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMzQyw4REFBOEQ7UUFDOUQsSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUk7WUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ3BELENBQUM7O0FBak9MLDhCQWtPQztBQTdOaUIsdUJBQVcsR0FBUyxLQUFLLENBQUMsQ0FBQyxtQ0FBbUM7QUErTmhGLDBDQUEwQztBQUMxQyxJQUFLLFNBS0o7QUFMRCxXQUFLLFNBQVM7SUFDViwyREFBYSxDQUFBO0lBQ2IseURBQVksQ0FBQTtJQUNaLG1FQUFpQixDQUFBO0lBQ2pCLHVEQUFXLENBQUE7QUFDZixDQUFDLEVBTEksU0FBUyxLQUFULFNBQVMsUUFLYiJ9","assetPath":"Assets/PropHunt_Template/_Scripts/Managers/GameManager.ts","manifest":{"properties":[{"assembly":"UnityEngine.CoreModule","name":"OnReset","type":"UnityEngine.Events.UnityEvent","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"","name":"gameState","type":"GameState","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"timePerGame","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"timeToHide","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"timeToCatch","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Hunter\""]}]},{"assembly":"UnityEngine.CoreModule","name":"playerLayer","type":"UnityEngine.LayerMask","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"GameManager","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: 7e35b8183bfc3a7cb238078e62d9ddf7
  onlyWriteTrigger: 0
