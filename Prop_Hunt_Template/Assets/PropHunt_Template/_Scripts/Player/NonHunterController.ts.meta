fileFormatVersion: 2
guid: ec31e36802baa094da907429bde2c914
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst __UnityEngine__ = require(\"UnityEngine\");\r\nconst
    UnityEngine_1 = require(\"UnityEngine\");\r\nconst ZEPETO_Character_Controller_1
    = require(\"ZEPETO.Character.Controller\");\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    UIManager_1 = require(\"../Managers/UIManager\");\r\nconst GameManager_1 = require(\"../Managers/GameManager\");\r\nconst
    MultiplayerPropHuntManager_1 = require(\"../Multiplayer/MultiplayerPropHuntManager\");\r\n//
    Class representing the controller for non-hunter characters\r\nclass NonHunterController
    extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor() {\r\n       
    super(...arguments);\r\n        this.spectingNumber = 0; // Number used for spectating\r\n       
    this.playerList = []; // List of player data\r\n    }\r\n    Start() {\r\n       
    // Set the main player object\r\n        this.playerParent = this.gameObject;\r\n       
    // Set the player''s child object\r\n        this.playerChild = this.playerParent.transform.GetChild(0);\r\n       
    let player = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.LocalPlayer.zepetoPlayer.character.gameObject;\r\n       
    // Check if the local player is this character\r\n        if (__UnityEngine__.Object.op_Equality(player,
    this.playerParent)) {\r\n            // Attach an event listener to the rotation
    slider\r\n            UIManager_1.default.instance.sliderRot.onValueChanged.AddListener((value)
    => {\r\n                this.RotateItem(value);\r\n            });\r\n       
    }\r\n        // Increase the non-hunter count in the game manager\r\n       
    GameManager_1.default.instance.AddOneNonHunter();\r\n    }\r\n    // Transform
    the character into an item\r\n    TransformIntoItem(itemObj) {\r\n        //
    Hide the player''s visual representation\r\n        this.HidePlayer();\r\n       
    if (itemObj) {\r\n            // Activate the transformed item\r\n           
    itemObj.SetActive(true);\r\n            // Set the item as a child of the player\r\n           
    itemObj.transform.SetParent(this.playerParent.transform);\r\n            // Store
    a reference to the transformed item\r\n            this.objectTransformed = itemObj;\r\n           
    // Get a reference of the collider of the object\r\n            let coll = this.objectTransformed.GetComponent($typeof(UnityEngine_1.BoxCollider));\r\n           
    // Adjust the collider size\r\n            coll.size = itemObj.GetComponent($typeof(UnityEngine_1.BoxCollider)).size;\r\n       
    }\r\n        // Save a reference of the playerParent position\r\n        let
    objPos = this.playerParent.transform.transform.position;\r\n        // Set the
    item''s position to match the player''s position\r\n        this.objectTransformed.transform.position
    = objPos;\r\n    }\r\n    // Transform the character back into a player\r\n   
    TransformIntoPlayer() {\r\n        // Activate the player object\r\n        this.gameObject.SetActive(true);\r\n       
    for (let index = 0; index < this.playerChild.childCount; index++) {\r\n           
    // Activate child objects\r\n            this.playerChild.GetChild(index).gameObject.SetActive(true);\r\n       
    }\r\n        for (let index = 1; index < this.playerParent.transform.childCount;
    index++) {\r\n            // Deactivate other children\r\n            this.playerParent.transform.GetChild(index).gameObject.SetActive(false);\r\n       
    }\r\n    }\r\n    // Hide the player''s visual representation\r\n    HidePlayer()
    {\r\n        for (let index = 0; index < this.playerChild.childCount; index++)
    {\r\n            // Deactivate child objects\r\n            this.playerChild.GetChild(index).gameObject.SetActive(false);\r\n       
    }\r\n        for (let index = 1; index < this.playerParent.transform.childCount;
    index++) {\r\n            // Deactivate other children\r\n            this.playerParent.transform.GetChild(index).gameObject.SetActive(false);\r\n       
    }\r\n    }\r\n    // Rotate the transformed item\r\n    RotateItem(percentage)
    {\r\n        if (__UnityEngine__.Object.op_Inequality(this.objectTransformed,
    null)) {\r\n            // Calculate the rotation\r\n            let rotation
    = new UnityEngine_1.Vector3(0, UnityEngine_1.Mathf.Lerp(0, 360, percentage),
    0);\r\n            // Apply the rotation\r\n            this.playerParent.transform.rotation
    = UnityEngine_1.Quaternion.Euler(rotation);\r\n        }\r\n    }\r\n    // Spectate
    a player\r\n    Spectate(spectatePlayer) {\r\n        // Set the camera to follow
    the player\r\n        ZEPETO_Character_Controller_1.ZepetoPlayers.instance.LocalPlayer.zepetoCamera.SetFollowTarget(spectatePlayer);\r\n   
    }\r\n    // Switch to the next spectator camera\r\n    NextSpectatorCamera()
    {\r\n        // Get the player list if not already obtained\r\n        if (!(this.playerList.length
    > 0))\r\n            this.playerList = MultiplayerPropHuntManager_1.default.instance.playersData;\r\n       
    if (this.playerList.length > 1) {\r\n            // Increment the specting number\r\n           
    this.spectingNumber++;\r\n            // Limit the specting number within the
    player count\r\n            this.LimitSpectingNumber(this.playerList.length);\r\n           
    // Get the player to spectate\r\n            let playerToSpect = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(this.playerList[this.spectingNumber].sessionId).character.transform;\r\n           
    // Start spectating\r\n            this.Spectate(playerToSpect);\r\n        }\r\n   
    }\r\n    // Switch to the previous spectator camera\r\n    PreviousSpectatorCamera()
    {\r\n        // Get the player list if not already obtained\r\n        if (!(this.playerList.length
    > 0))\r\n            this.playerList = MultiplayerPropHuntManager_1.default.instance.playersData;\r\n       
    if (this.playerList.length > 1) {\r\n            // Decrement the specting number\r\n           
    this.spectingNumber--;\r\n            // Limit the specting number within the
    player count\r\n            this.LimitSpectingNumber(this.playerList.length);\r\n           
    // Get the player to spectate\r\n            let playerToSpect = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(this.playerList[this.spectingNumber].sessionId).character.transform;\r\n           
    // Start spectating\r\n            this.Spectate(playerToSpect);\r\n        }\r\n   
    }\r\n    // Ensure the specting number stays within bounds\r\n    LimitSpectingNumber(limit)
    {\r\n        // Reset the specting number if it exceeds the limit\r\n       
    if (this.spectingNumber >= limit)\r\n            this.spectingNumber = 0;\r\n       
    // Wrap around if the specting number is negative\r\n        if (this.spectingNumber
    < 0)\r\n            this.spectingNumber = limit - 1;\r\n    }\r\n    // Reset
    the non-hunter character\r\n    ResetNonHunter(isLocal) {\r\n        // Transform
    the character back into a player\r\n        this.TransformIntoPlayer();\r\n       
    // Set the camera to follow the local player\r\n        if (isLocal)\r\n           
    ZEPETO_Character_Controller_1.ZepetoPlayers.instance.LocalPlayer.zepetoCamera.SetFollowTarget(ZEPETO_Character_Controller_1.ZepetoPlayers.instance.LocalPlayer.zepetoPlayer.character.transform);\r\n   
    }\r\n}\r\nexports.default = NonHunterController;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTm9uSHVudGVyQ29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIk5vbkh1bnRlckNvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNkNBQTZGO0FBQzdGLDZFQUE0RDtBQUM1RCxpREFBc0Q7QUFDdEQscURBQThDO0FBQzlDLHlEQUFrRDtBQUNsRCwwRkFBd0c7QUFFeEcsOERBQThEO0FBQzlELE1BQXFCLG1CQUFvQixTQUFRLHFDQUFxQjtJQUF0RTs7UUFLWSxtQkFBYyxHQUFXLENBQUMsQ0FBQyxDQUFDLDZCQUE2QjtRQUN6RCxlQUFVLEdBQXNCLEVBQUUsQ0FBQyxDQUFDLHNCQUFzQjtJQStJdEUsQ0FBQztJQTdJRyxLQUFLO1FBQ0QsNkJBQTZCO1FBQzdCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUNwQyxnQ0FBZ0M7UUFDaEMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFM0QsSUFBSSxNQUFNLEdBQUcsMkNBQWEsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDO1FBQ2xGLDhDQUE4QztRQUM5QywyQkFzSTIySSxXQUFZLENBdEluM0ksTUFBTSxFQUFJLElBQUksQ0FBQyxZQUFZLEdBQUU7WUFDN0Isa0RBQWtEO1lBQ2xELG1CQUFTLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7Z0JBQzlELElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDM0IsQ0FBQyxDQUFDLENBQUM7U0FDTjtRQUVELG9EQUFvRDtRQUNwRCxxQkFBVyxDQUFDLFFBQVEsQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMzQyxDQUFDO0lBRUQsdUNBQXVDO0lBQ3ZDLGlC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","assetPath":"Assets/PropHunt_Template/_Scripts/Player/NonHunterController.ts","manifest":{"properties":[],"name":"NonHunterController","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: 85481e1662d2721fcc409ed4fd3798fb
  onlyWriteTrigger: 0
